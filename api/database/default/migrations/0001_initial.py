# Generated by Django 3.1.2 on 2020-10-15 14:11

import database.default.models.manager
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.EmailValidator])),
                ('first_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator("^[a-zA-Z .'-]+$")])),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_name', models.CharField(max_length=255, validators=[django.core.validators.RegexValidator("^[a-zA-Z .'-]+$")])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'db_table': 'account',
                'default_permissions': (),
            },
            managers=[
                ('objects', database.default.models.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_break', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator("^[a-zA-Z0-9 _.'-]+$")])),
                ('time_end', models.TimeField()),
                ('time_start', models.TimeField()),
                ('account_friday', models.ManyToManyField(blank=True, limit_choices_to={'is_active': True, 'is_superuser': False}, related_name='account_friday', to=settings.AUTH_USER_MODEL)),
                ('account_monday', models.ManyToManyField(blank=True, limit_choices_to={'is_active': True, 'is_superuser': False}, related_name='account_monday', to=settings.AUTH_USER_MODEL)),
                ('account_saturday', models.ManyToManyField(blank=True, limit_choices_to={'is_active': True, 'is_superuser': False}, related_name='account_saturday', to=settings.AUTH_USER_MODEL)),
                ('account_sunday', models.ManyToManyField(blank=True, limit_choices_to={'is_active': True, 'is_superuser': False}, related_name='account_sunday', to=settings.AUTH_USER_MODEL)),
                ('account_thursday', models.ManyToManyField(blank=True, limit_choices_to={'is_active': True, 'is_superuser': False}, related_name='account_thursday', to=settings.AUTH_USER_MODEL)),
                ('account_tuesday', models.ManyToManyField(blank=True, limit_choices_to={'is_active': True, 'is_superuser': False}, related_name='account_tuesday', to=settings.AUTH_USER_MODEL)),
                ('account_wednesday', models.ManyToManyField(blank=True, limit_choices_to={'is_active': True, 'is_superuser': False}, related_name='account_wednesday', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Schedule',
                'verbose_name_plural': 'Schedules',
                'db_table': 'schedule',
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='account',
            name='schedule_friday',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedule_friday', to='default.schedule'),
        ),
        migrations.AddField(
            model_name='account',
            name='schedule_monday',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedule_monday', to='default.schedule'),
        ),
        migrations.AddField(
            model_name='account',
            name='schedule_saturday',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedule_saturday', to='default.schedule'),
        ),
        migrations.AddField(
            model_name='account',
            name='schedule_sunday',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedule_sunday', to='default.schedule'),
        ),
        migrations.AddField(
            model_name='account',
            name='schedule_thursday',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedule_thursday', to='default.schedule'),
        ),
        migrations.AddField(
            model_name='account',
            name='schedule_tuesday',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedule_tuesday', to='default.schedule'),
        ),
        migrations.AddField(
            model_name='account',
            name='schedule_wednesday',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedule_wednesday', to='default.schedule'),
        ),
        migrations.AddField(
            model_name='account',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
